{"ast":null,"code":"var _jsxFileName = \"/Users/arinacazacu/Documents/master/SOA/ml-in-production/src/components/Canvas/canvas.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./canvas.css\";\n\nconst DigitCanvas = props => {\n  const canvasRef = useRef(null);\n  const [canvasContext, setCanvasContext] = useState(null);\n  const [isMouseDown, setMouseDown] = useState(false);\n  const [lastPos, setLastPos] = useState({\n    x: null,\n    y: null\n  });\n\n  const onMouseDown = e => {\n    const {\n      mouseX,\n      mouseY\n    } = getMousePosition(e);\n    const el = document.getElementsByClassName(\"layout-content\");\n\n    if (el && el[0]) {\n      el[0].style.overflowY = \"hidden\";\n    }\n\n    setMouseDown(true);\n    draw(mouseX, mouseY);\n  };\n\n  const onMouseMove = e => {\n    if (isMouseDown) {\n      const {\n        mouseX,\n        mouseY\n      } = getMousePosition(e);\n      draw(mouseX, mouseY);\n    }\n  };\n\n  const onMouseUp = e => {\n    setMouseDown(false);\n    const el = document.getElementsByClassName(\"layout-content\");\n\n    if (el && el[0]) {\n      el[0].style.overflowY = \"scroll\";\n    }\n  };\n\n  const getMousePosition = e => {\n    let mouseX = null;\n    let mouseY = null;\n\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      mouseX = e.clientX - boundingRect.left;\n      mouseY = e.clientY - boundingRect.top;\n\n      if (e.touches) {\n        mouseX = e.touches[0].clientX - boundingRect.left;\n        mouseY = e.touches[0].clientY - boundingRect.top;\n      }\n    }\n\n    return {\n      mouseX: mouseX,\n      mouseY: mouseY\n    };\n  };\n\n  const draw = (x, y) => {\n    if (isMouseDown) {\n      canvasContext.strokeStyle = \"white\";\n      canvasContext.lineWidth = 10;\n      canvasContext.lineJoin = \"round\";\n      canvasContext.beginPath();\n      canvasContext.moveTo(lastPos.x, lastPos.y);\n      canvasContext.lineTo(x, y);\n      canvasContext.closePath();\n      canvasContext.stroke();\n    }\n\n    setLastPos({\n      x,\n      y\n    });\n  };\n\n  const clearCanvas = e => {\n    canvasContext.clearRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n    setMouseDown(false);\n    setLastPos({\n      x: null,\n      y: null\n    });\n  };\n\n  const onPredict = async e => {\n    const {\n      predictDigit\n    } = props;\n    let c = canvasRef.current.toDataURL('image/png');\n    predictDigit(c);\n  };\n\n  useEffect(() => {\n    if (canvasRef) {\n      setCanvasContext(canvasRef.current.getContext(\"2d\"));\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"canvas-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    onMouseDown: onMouseDown,\n    onMouseMove: onMouseMove,\n    onMouseUp: onMouseUp,\n    onTouchStart: onMouseDown,\n    onTouchEnd: onMouseUp,\n    onTouchMove: onMouseMove,\n    ref: canvasRef,\n    width: \"250px\",\n    height: \"250px\",\n    className: \"canvas-styles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: \"4rem\",\n      marginRight: \"2rem\"\n    },\n    onClick: onPredict,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Predict\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: \"4rem\"\n    },\n    onClick: clearCanvas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default DigitCanvas;","map":{"version":3,"sources":["/Users/arinacazacu/Documents/master/SOA/ml-in-production/src/components/Canvas/canvas.js"],"names":["React","useRef","useState","useEffect","DigitCanvas","props","canvasRef","canvasContext","setCanvasContext","isMouseDown","setMouseDown","lastPos","setLastPos","x","y","onMouseDown","e","mouseX","mouseY","getMousePosition","el","document","getElementsByClassName","style","overflowY","draw","onMouseMove","onMouseUp","current","boundingRect","getBoundingClientRect","clientX","left","clientY","top","touches","strokeStyle","lineWidth","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","clearCanvas","clearRect","canvas","width","height","onPredict","predictDigit","c","toDataURL","getContext","marginRight"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport \"./canvas.css\";\n\nconst DigitCanvas = (props) => {\n  const canvasRef = useRef(null);\n  const [canvasContext, setCanvasContext] = useState(null);\n  const [isMouseDown, setMouseDown] = useState(false);\n  const [lastPos, setLastPos] = useState({ x: null, y: null });\n\n  const onMouseDown = (e) => {\n    const { mouseX, mouseY } = getMousePosition(e);\n    const el = document.getElementsByClassName(\"layout-content\");\n    if (el && el[0]) {\n      el[0].style.overflowY = \"hidden\";\n    }\n    setMouseDown(true);\n    draw(mouseX, mouseY);\n  };\n\n  const onMouseMove = (e) => {\n    if (isMouseDown) {\n      const { mouseX, mouseY } = getMousePosition(e);\n      draw(mouseX, mouseY);\n    }\n  };\n\n  const onMouseUp = (e) => {\n    setMouseDown(false);\n    const el = document.getElementsByClassName(\"layout-content\");\n    if (el && el[0]) {\n      el[0].style.overflowY = \"scroll\";\n    }\n  };\n\n  const getMousePosition = (e) => {\n    let mouseX = null;\n    let mouseY = null;\n    if (canvasRef.current) {\n      const boundingRect = canvasRef.current.getBoundingClientRect();\n      mouseX = e.clientX - boundingRect.left;\n      mouseY = e.clientY - boundingRect.top;\n      if (e.touches) {\n        mouseX = e.touches[0].clientX - boundingRect.left;\n        mouseY = e.touches[0].clientY - boundingRect.top;\n      }\n    }\n    return {\n      mouseX: mouseX,\n      mouseY: mouseY\n    };\n  };\n\n  const draw = (x, y) => {\n    if (isMouseDown) {\n      canvasContext.strokeStyle = \"white\";\n      canvasContext.lineWidth = 10;\n      canvasContext.lineJoin = \"round\";\n      canvasContext.beginPath();\n      canvasContext.moveTo(lastPos.x, lastPos.y);\n      canvasContext.lineTo(x, y);\n      canvasContext.closePath();\n      canvasContext.stroke();\n    }\n    setLastPos({ x, y });\n  };\n\n  const clearCanvas = (e) => {\n    canvasContext.clearRect(0, 0, canvasContext.canvas.width, canvasContext.canvas.height);\n    setMouseDown(false);\n    setLastPos({ x: null, y: null });\n  };\n\n  const onPredict = async (e) => {\n    const { predictDigit } = props;\n    let c = canvasRef.current.toDataURL('image/png')\n    predictDigit(c)\n  };\n\n  useEffect(() => {\n    if (canvasRef) {\n      setCanvasContext(canvasRef.current.getContext(\"2d\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"canvas-container\">\n        <canvas\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n          onTouchStart={onMouseDown}\n          onTouchEnd={onMouseUp}\n          onTouchMove={onMouseMove}\n          ref={canvasRef}\n          width={\"250px\"}\n          height={\"250px\"}\n          className=\"canvas-styles\"\n        ></canvas>\n      </div>\n      <div>\n        <button style={{ width: \"4rem\", marginRight: \"2rem\" }} onClick={onPredict}>\n          Predict\n        </button>\n        <button style={{ width: \"4rem\" }} onClick={clearCanvas}>\n          Clear\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default DigitCanvas;\n"]},"metadata":{},"sourceType":"module"}