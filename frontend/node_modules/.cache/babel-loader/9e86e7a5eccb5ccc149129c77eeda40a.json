{"ast":null,"code":"var _jsxFileName = \"/Users/arinacazacu/Documents/master/SOA/ml-in-production/src/pages/Home/HomePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DigitCanvas from \"../../components/Canvas\";\nimport DigitCard from \"../../components/DigitCard\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport \"./home.css\";\n\nconst HomePage = props => {\n  const [mnistModel, setMnistModel] = useState(null);\n  const [predictedResult, setPredictedResult] = useState(null);\n\n  const predictDigit = async data => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('https://us-central1-chrome-flight-337209.cloudfunctions.net/function-1', requestOptions).then(response => {\n      if (!response.ok) throw new Error(response.json());else return response.json();\n    }).then(data => {\n      const predictions = data;\n\n      if (predictions) {\n        const predictedDigit = predictions.indexOf(Math.max(...predictions));\n        setPredictedResult(predictedDigit);\n        console.log(\"Predicted result: \", predictedDigit);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const predictFromApi = data => {\n    data.array().then(array => {\n      const body = {\n        instances: array\n      };\n      const params = {\n        method: \"POST\",\n        body: JSON.stringify(body)\n      };\n      fetch(process.env.REACT_APP_API_URL, params).then(res => res.json()).then(data => {\n        const predictions = data.predictions && data.predictions[0];\n\n        if (predictions) {\n          const predictedDigit = predictions.indexOf(Math.max(...predictions));\n          console.log(\"Predicted result: \", predictedDigit);\n        }\n      }).catch(err => {\n        console.error(\"Error: \", err);\n      });\n    });\n  };\n\n  useEffect(() => {// async function loadModel() {\n    //   const model = await tf.loadLayersModel(process.env.REACT_APP_MODEL_URL);\n    //   setMnistModel(model);\n    // }\n    // loadModel();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      minWidth: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DigitCanvas, {\n    predictDigit: predictDigit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      minWidth: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DigitCard, {\n    digit: predictedResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/arinacazacu/Documents/master/SOA/ml-in-production/src/pages/Home/HomePage.js"],"names":["React","useState","useEffect","DigitCanvas","DigitCard","tf","HomePage","props","mnistModel","setMnistModel","predictedResult","setPredictedResult","predictDigit","data","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","Error","json","predictions","predictedDigit","indexOf","Math","max","console","log","catch","err","predictFromApi","array","instances","params","process","env","REACT_APP_API_URL","res","error","width","minWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DigitCanvas from \"../../components/Canvas\";\nimport DigitCard from \"../../components/DigitCard\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport \"./home.css\";\n\nconst HomePage = (props) => {\n  const [mnistModel, setMnistModel] = useState(null);\n  const [predictedResult, setPredictedResult] = useState(null);\n\n  const predictDigit = async (data) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    };\n\n    fetch('https://us-central1-chrome-flight-337209.cloudfunctions.net/function-1', requestOptions)\n      .then((response) => {\n        if (!response.ok) throw new Error(response.json())\n        else return response.json()\n      })\n      .then((data) =>{\n          const predictions = data\n          if (predictions) {\n            const predictedDigit = predictions.indexOf(Math.max(...predictions));\n            setPredictedResult(predictedDigit);\n            console.log(\"Predicted result: \", predictedDigit);\n          }\n      })\n      .catch((err) => console.log(err))\n  };\n\n  const predictFromApi = (data) => {\n    data.array().then((array) => {\n      const body = {\n        instances: array\n      };\n\n      const params = {\n        method: \"POST\",\n        body: JSON.stringify(body)\n      };\n\n      fetch(process.env.REACT_APP_API_URL, params)\n        .then((res) => res.json())\n        .then((data) => {\n          const predictions = data.predictions && data.predictions[0];\n          if (predictions) {\n            const predictedDigit = predictions.indexOf(Math.max(...predictions));\n            console.log(\"Predicted result: \", predictedDigit);\n          }\n        })\n        .catch((err) => {\n          console.error(\"Error: \", err);\n        });\n    });\n  };\n\n  useEffect(() => {\n    // async function loadModel() {\n    //   const model = await tf.loadLayersModel(process.env.REACT_APP_MODEL_URL);\n    //   setMnistModel(model);\n    // }\n    // loadModel();\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"inner-container\">\n        <div style={{ width: \"50%\", minWidth: \"300px\" }}>\n          <DigitCanvas predictDigit={predictDigit} />\n\n        </div>\n        <div style={{ width: \"50%\", minWidth: \"300px\" }}>\n          <DigitCard digit={predictedResult} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}